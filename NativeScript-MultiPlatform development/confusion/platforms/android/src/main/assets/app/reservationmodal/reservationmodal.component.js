"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var modal_dialog_1 = require("nativescript-angular/modal-dialog");
var page_1 = require("ui/page");
var ReservationModalComponent = (function () {
    function ReservationModalComponent(params, page) {
        this.params = params;
        this.page = page;
        this.guestArray = [1, 2, 3, 4, 5, 6];
        this.isDateTime = false;
        if (params.context === "guest") {
            this.isDateTime = false;
        }
        else if (params.context === "date-time") {
            this.isDateTime = true;
        }
    }
    ReservationModalComponent.prototype.ngOnInit = function () {
        if (this.isDateTime) {
            var datePicker = this.page.getViewById('datePicker');
            var currentdate = new Date();
            datePicker.year = currentdate.getFullYear();
            datePicker.month = currentdate.getMonth() + 1;
            datePicker.day = currentdate.getDate();
            datePicker.minDate = currentdate;
            datePicker.maxDate = new Date(2045, 4, 12);
            var timePicker = this.page.getViewById('timePicker');
            timePicker.hour = currentdate.getHours();
            timePicker.minute = currentdate.getMinutes();
        }
    };
    ReservationModalComponent.prototype.submit = function () {
        if (this.isDateTime) {
            var datePicker = this.page.getViewById('datePicker');
            var selectedDate = datePicker.date;
            var timePicker = this.page.getViewById('timePicker');
            var selectedTime = timePicker.time;
            var reserveTime = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate(), selectedTime.getHours(), selectedTime.getMinutes());
            this.params.closeCallback(reserveTime.toISOString());
        }
        else {
            var picker = this.page.getViewById('guestPicker');
            this.params.closeCallback(this.guestArray[picker.selectedIndex]);
        }
    };
    ReservationModalComponent = __decorate([
        core_1.Component({
            moduleId: module.id,
            templateUrl: './reservationmodal.component.html'
        }),
        __metadata("design:paramtypes", [modal_dialog_1.ModalDialogParams,
            page_1.Page])
    ], ReservationModalComponent);
    return ReservationModalComponent;
}());
exports.ReservationModalComponent = ReservationModalComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzZXJ2YXRpb25tb2RhbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJyZXNlcnZhdGlvbm1vZGFsLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHNDQUFrRDtBQUNsRCxrRUFBc0U7QUFJdEUsZ0NBQStCO0FBUy9CO0lBTUksbUNBQ1ksTUFBeUIsRUFDekIsSUFBVTtRQURWLFdBQU0sR0FBTixNQUFNLENBQW1CO1FBQ3pCLFNBQUksR0FBSixJQUFJLENBQU07UUFOdEIsZUFBVSxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUVoQyxlQUFVLEdBQVksS0FBSyxDQUFDO1FBTXhCLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxPQUFPLEtBQUssT0FBTyxDQUFDLENBQUMsQ0FBQztZQUM3QixJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztRQUM1QixDQUFDO1FBRUQsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxPQUFPLEtBQUssV0FBVyxDQUFDLENBQUMsQ0FBQztZQUN0QyxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztRQUMzQixDQUFDO0lBQ0wsQ0FBQztJQUdELDRDQUFRLEdBQVI7UUFFSSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztZQUVsQixJQUFJLFVBQVUsR0FBMkIsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQWEsWUFBWSxDQUFDLENBQUM7WUFDekYsSUFBSSxXQUFXLEdBQVMsSUFBSSxJQUFJLEVBQUUsQ0FBQztZQUNuQyxVQUFVLENBQUMsSUFBSSxHQUFHLFdBQVcsQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUM1QyxVQUFVLENBQUMsS0FBSyxHQUFHLFdBQVcsQ0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDLENBQUM7WUFDOUMsVUFBVSxDQUFDLEdBQUcsR0FBRyxXQUFXLENBQUMsT0FBTyxFQUFFLENBQUM7WUFDdkMsVUFBVSxDQUFDLE9BQU8sR0FBRyxXQUFXLENBQUM7WUFDakMsVUFBVSxDQUFDLE9BQU8sR0FBRyxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBRTNDLElBQUksVUFBVSxHQUEyQixJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBYSxZQUFZLENBQUMsQ0FBQztZQUN6RixVQUFVLENBQUMsSUFBSSxHQUFHLFdBQVcsQ0FBQyxRQUFRLEVBQUUsQ0FBQztZQUN6QyxVQUFVLENBQUMsTUFBTSxHQUFHLFdBQVcsQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUVqRCxDQUFDO0lBQ0wsQ0FBQztJQUVNLDBDQUFNLEdBQWI7UUFDSSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztZQUNsQixJQUFJLFVBQVUsR0FBMkIsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQWEsWUFBWSxDQUFDLENBQUM7WUFDekYsSUFBSSxZQUFZLEdBQUcsVUFBVSxDQUFDLElBQUksQ0FBQztZQUNuQyxJQUFJLFVBQVUsR0FBMkIsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQWEsWUFBWSxDQUFDLENBQUM7WUFDekYsSUFBSSxZQUFZLEdBQUcsVUFBVSxDQUFDLElBQUksQ0FBQztZQUNuQyxJQUFJLFdBQVcsR0FBRyxJQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxFQUFFLEVBQ2pELFlBQVksQ0FBQyxRQUFRLEVBQUUsRUFDdkIsWUFBWSxDQUFDLE9BQU8sRUFBRSxFQUN0QixZQUFZLENBQUMsUUFBUSxFQUFFLEVBQ3ZCLFlBQVksQ0FBQyxVQUFVLEVBQUUsQ0FBQyxDQUFDO1lBQy9CLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDO1FBQ3pELENBQUM7UUFDRCxJQUFJLENBQUMsQ0FBQztZQUNGLElBQUksTUFBTSxHQUFlLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFhLGFBQWEsQ0FBQyxDQUFDO1lBQzFFLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUE7UUFDcEUsQ0FBQztJQUNMLENBQUM7SUF4RFEseUJBQXlCO1FBUHJDLGdCQUFTLENBQ047WUFDSSxRQUFRLEVBQUUsTUFBTSxDQUFDLEVBQUU7WUFDbkIsV0FBVyxFQUFFLG1DQUFtQztTQUNuRCxDQUNKO3lDQVN1QixnQ0FBaUI7WUFDbkIsV0FBSTtPQVJiLHlCQUF5QixDQXlEckM7SUFBRCxnQ0FBQztDQUFBLEFBekRELElBeURDO0FBekRZLDhEQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE1vZGFsRGlhbG9nUGFyYW1zIH0gZnJvbSAnbmF0aXZlc2NyaXB0LWFuZ3VsYXIvbW9kYWwtZGlhbG9nJztcclxuaW1wb3J0IHsgRGF0ZVBpY2tlciB9IGZyb20gJ3VpL2RhdGUtcGlja2VyJztcclxuaW1wb3J0IHsgVGltZVBpY2tlciB9IGZyb20gJ3VpL3RpbWUtcGlja2VyJztcclxuaW1wb3J0IHsgTGlzdFBpY2tlciB9IGZyb20gJ3VpL2xpc3QtcGlja2VyJztcclxuaW1wb3J0IHsgUGFnZSB9IGZyb20gJ3VpL3BhZ2UnO1xyXG5cclxuQENvbXBvbmVudChcclxuICAgIHtcclxuICAgICAgICBtb2R1bGVJZDogbW9kdWxlLmlkLFxyXG4gICAgICAgIHRlbXBsYXRlVXJsOiAnLi9yZXNlcnZhdGlvbm1vZGFsLmNvbXBvbmVudC5odG1sJ1xyXG4gICAgfVxyXG4pXHJcblxyXG5leHBvcnQgY2xhc3MgUmVzZXJ2YXRpb25Nb2RhbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG4gICAgZ3Vlc3RBcnJheSA9IFsxLCAyLCAzLCA0LCA1LCA2XTtcclxuICAgIGd1ZXN0czogbnVtYmVyO1xyXG4gICAgaXNEYXRlVGltZTogYm9vbGVhbiA9IGZhbHNlO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgIHByaXZhdGUgcGFyYW1zOiBNb2RhbERpYWxvZ1BhcmFtcyxcclxuICAgICAgICBwcml2YXRlIHBhZ2U6IFBhZ2VcclxuICAgICkge1xyXG4gICAgICAgIGlmIChwYXJhbXMuY29udGV4dCA9PT0gXCJndWVzdFwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuaXNEYXRlVGltZSA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZWxzZSBpZiAocGFyYW1zLmNvbnRleHQgPT09IFwiZGF0ZS10aW1lXCIpIHtcclxuICAgICAgICAgICAgdGhpcy5pc0RhdGVUaW1lID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuICAgIG5nT25Jbml0KCkge1xyXG5cclxuICAgICAgICBpZiAodGhpcy5pc0RhdGVUaW1lKSB7XHJcblxyXG4gICAgICAgICAgICBsZXQgZGF0ZVBpY2tlcjogRGF0ZVBpY2tlciA9IDxEYXRlUGlja2VyPnRoaXMucGFnZS5nZXRWaWV3QnlJZDxEYXRlUGlja2VyPignZGF0ZVBpY2tlcicpO1xyXG4gICAgICAgICAgICBsZXQgY3VycmVudGRhdGU6IERhdGUgPSBuZXcgRGF0ZSgpO1xyXG4gICAgICAgICAgICBkYXRlUGlja2VyLnllYXIgPSBjdXJyZW50ZGF0ZS5nZXRGdWxsWWVhcigpO1xyXG4gICAgICAgICAgICBkYXRlUGlja2VyLm1vbnRoID0gY3VycmVudGRhdGUuZ2V0TW9udGgoKSArIDE7XHJcbiAgICAgICAgICAgIGRhdGVQaWNrZXIuZGF5ID0gY3VycmVudGRhdGUuZ2V0RGF0ZSgpO1xyXG4gICAgICAgICAgICBkYXRlUGlja2VyLm1pbkRhdGUgPSBjdXJyZW50ZGF0ZTtcclxuICAgICAgICAgICAgZGF0ZVBpY2tlci5tYXhEYXRlID0gbmV3IERhdGUoMjA0NSwgNCwgMTIpO1xyXG5cclxuICAgICAgICAgICAgbGV0IHRpbWVQaWNrZXI6IFRpbWVQaWNrZXIgPSA8VGltZVBpY2tlcj50aGlzLnBhZ2UuZ2V0Vmlld0J5SWQ8VGltZVBpY2tlcj4oJ3RpbWVQaWNrZXInKTtcclxuICAgICAgICAgICAgdGltZVBpY2tlci5ob3VyID0gY3VycmVudGRhdGUuZ2V0SG91cnMoKTtcclxuICAgICAgICAgICAgdGltZVBpY2tlci5taW51dGUgPSBjdXJyZW50ZGF0ZS5nZXRNaW51dGVzKCk7XHJcblxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3VibWl0KCkge1xyXG4gICAgICAgIGlmICh0aGlzLmlzRGF0ZVRpbWUpIHtcclxuICAgICAgICAgICAgbGV0IGRhdGVQaWNrZXI6IERhdGVQaWNrZXIgPSA8RGF0ZVBpY2tlcj50aGlzLnBhZ2UuZ2V0Vmlld0J5SWQ8RGF0ZVBpY2tlcj4oJ2RhdGVQaWNrZXInKTtcclxuICAgICAgICAgICAgbGV0IHNlbGVjdGVkRGF0ZSA9IGRhdGVQaWNrZXIuZGF0ZTtcclxuICAgICAgICAgICAgbGV0IHRpbWVQaWNrZXI6IFRpbWVQaWNrZXIgPSA8VGltZVBpY2tlcj50aGlzLnBhZ2UuZ2V0Vmlld0J5SWQ8VGltZVBpY2tlcj4oJ3RpbWVQaWNrZXInKTtcclxuICAgICAgICAgICAgbGV0IHNlbGVjdGVkVGltZSA9IHRpbWVQaWNrZXIudGltZTtcclxuICAgICAgICAgICAgbGV0IHJlc2VydmVUaW1lID0gbmV3IERhdGUoc2VsZWN0ZWREYXRlLmdldEZ1bGxZZWFyKCksXHJcbiAgICAgICAgICAgICAgICBzZWxlY3RlZERhdGUuZ2V0TW9udGgoKSxcclxuICAgICAgICAgICAgICAgIHNlbGVjdGVkRGF0ZS5nZXREYXRlKCksXHJcbiAgICAgICAgICAgICAgICBzZWxlY3RlZFRpbWUuZ2V0SG91cnMoKSxcclxuICAgICAgICAgICAgICAgIHNlbGVjdGVkVGltZS5nZXRNaW51dGVzKCkpO1xyXG4gICAgICAgICAgICB0aGlzLnBhcmFtcy5jbG9zZUNhbGxiYWNrKHJlc2VydmVUaW1lLnRvSVNPU3RyaW5nKCkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgbGV0IHBpY2tlciA9IDxMaXN0UGlja2VyPnRoaXMucGFnZS5nZXRWaWV3QnlJZDxMaXN0UGlja2VyPignZ3Vlc3RQaWNrZXInKTtcclxuICAgICAgICAgICAgdGhpcy5wYXJhbXMuY2xvc2VDYWxsYmFjayh0aGlzLmd1ZXN0QXJyYXlbcGlja2VyLnNlbGVjdGVkSW5kZXhdKVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSJdfQ==